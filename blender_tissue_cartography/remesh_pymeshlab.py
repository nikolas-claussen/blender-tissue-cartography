# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05b_remeshing_pymeshlab.ipynb.

# %% auto 0
__all__ = ['subdivide_pymeshlab', 'simplify_pymeshlab']

# %% ../nbs/05b_remeshing_pymeshlab.ipynb 4
from . import io as tcio
from . import interface_pymeshlab as intmsl

import numpy as np
import igl

import warnings
import os
import pymeshlab

# %% ../nbs/05b_remeshing_pymeshlab.ipynb 7
def subdivide_pymeshlab(mesh, threshold=1, iterations=3, reglue=True, decimals=10):
    """
    Refine mesh by edge subdivision using pymeshlab.
    
    Preserves UV information, but cuts the mesh along seams. Can subdivide long edges only.
    
    Parameters
    ----------
    mesh : ObjMesh
        Initial mesh.
    threshold : float
        All the edges longer than this threshold will be refined. In percent?
        Lower values mean more subdivision.  Setting this value to zero will
        force an uniform refinement.
    iterations : int
        Filter iterations
    reglue : bool
        Glue back after cutting
    decimals : int
        Decimal precision for merging vertices when regluing.

    Returns
    -------
    mesh_subdiv : ObjMesh
        Subdivided mesh.
    
    """
    mesh_cut = mesh.cut_along_seams()
    mesh_pymeshlab = intmsl.convert_to_pymeshlab(mesh_cut)
    ms = pymeshlab.MeshSet()
    ms.add_mesh(mesh_pymeshlab)
    ms.meshing_surface_subdivision_midpoint(threshold=pymeshlab.PercentageValue(threshold))
    mesh_subdiv = intmsl.convert_from_pymeshlab(ms.current_mesh(), reconstruct_texture_from_faces=False)
    if reglue:
        mesh_subdiv = tcio.glue_seams(mesh_subdiv, decimals=decimals)

    return mesh_subdiv

# %% ../nbs/05b_remeshing_pymeshlab.ipynb 14
def simplify_pymeshlab(mesh, targetfacenum, tempfilename="temp.obj", reglue=True, decimals=10):
    """
    Simplify mesh using pymeshlab, removing small triangles.
    
    Use meshing_decimation_quadric_edge_collapse_with_texture filter.
    Due to a bug in pymeshlab, we need to temporarily write some files to disk.
    Cuts mesh along UV seams so it can preserve UV texture info.
    
    Parameters
    ----------
    mesh : ObjMesh
        Initial mesh.
    targetfacenum : int
        Target number of faces
    tempfilename : str
        Temporary file written for pymeshlab interfacing. This file will be deleted after!
    reglue : bool
        Glue back after cutting
    decimals : int
        Decimal precision for merging vertices when regluing.

    Returns
    -------
    mesh_simplified : ObjMesh
        Simplified mesh.
    
    """
    mesh.cut_along_seams().write_obj(tempfilename)
    ms = pymeshlab.MeshSet()
    ms.load_new_mesh(tempfilename)
    ms.meshing_decimation_quadric_edge_collapse_with_texture(targetfacenum=targetfacenum,
                                                                  preserveboundary=True)
    mesh_simplified = intmsl.convert_from_pymeshlab(ms.current_mesh(), reconstruct_texture_from_faces=False)
    
    if reglue:
        mesh_simplified = tcio.glue_seams(mesh_simplified, decimals=decimals)
    return mesh_simplified
