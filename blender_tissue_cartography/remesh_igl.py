# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05a_remeshing_igl.ipynb.

# %% auto 0
__all__ = ['subdivide_igl']

# %% ../nbs/05a_remeshing_igl.ipynb 4
from . import io as tcio
from . import wrapping as tcwrap

import numpy as np
import igl

import warnings
import os

# %% ../nbs/05a_remeshing_igl.ipynb 7
def subdivide_igl(mesh, reglue=True, decimals=None):
    """
    Refine mesh by edge subdivision using igl.
    
    Subdivides all edges by placing new vertices at edge midpoints. Preserves UV information,
    by cuts the mesh along seams and (optionally) glueing back after. New texture vertices
    are also placed at texture-edge midpoints.
    
    Parameters
    ----------
    mesh : ObjMesh
        Initial mesh.

    Returns
    -------
    mesh_subdiv : ObjMesh
        Subdivided mesh.
    reglue : bool
        Glue back after cutting
    decimals : int or None
        Decimal precision for merging vertices when regluing. If None, estimated from average
        edge mesh length as -4*log_10(avg length)
    """
    mesh_cut = mesh.cut_along_seams()
    new_vertices, new_faces = igl.upsample(mesh_cut.vertices, mesh_cut.tris, number_of_subdivs=1)
    new_texture_vertices, _ = igl.upsample(mesh_cut.texture_vertices, mesh_cut.tris, number_of_subdivs=1)
    mesh_subdiv = tcio.ObjMesh(vertices=new_vertices, texture_vertices=new_texture_vertices,
                               faces=[[[v,v] for v in fc] for fc in new_faces])
    mesh_subdiv.set_normals()
    if reglue:
        mesh_subdiv = tcio.glue_seams(mesh_subdiv, decimals=decimals)
    return mesh_subdiv
