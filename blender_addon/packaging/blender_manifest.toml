schema_version = "1.0.0"
id = "blender_tissue_cartography"
version = "1.0.0"
name = "Blender Tissue Cartography"
tagline = "A tools for analysis of 4D imaging data in Blender"
maintainer = "Nikolas Claussen <nclaussen@ucsb.edu>"
type = "add-on"
blender_version_min = "4.3.0"
license = ["SPDX:GPL-3.0-or-later",]

# You can specify what platforms this can be used with.
platforms = ["windows-x64", "macos-arm64", "linux-x64"]
# NOTE: All wheels for all platforms will be downloaded in you specify `--all-wheels`
# no matter which platforms are specified here.
# NOTE: If `--all-wheels` is specified and the platforms are not specified, it will
# download all the platforms, and generate builds for all platforms.



# Folder to store the wheels in the addon.
wheels = [
	"./wheels/imageio-2.37.0-py3-none-any.whl",
	"./wheels/lazy_loader-0.4-py3-none-any.whl",
	"./wheels/libigl-2.5.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
	"./wheels/networkx-3.4.2-py3-none-any.whl",
	"./wheels/numpy-2.2.2-cp311-cp311-macosx_11_0_arm64.whl",
	"./wheels/numpy-2.2.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
	"./wheels/numpy-2.2.2-cp311-cp311-win_amd64.whl",
	"./wheels/packaging-24.2-py3-none-any.whl",
	"./wheels/pillow-11.1.0-cp311-cp311-macosx_11_0_arm64.whl",
	"./wheels/pillow-11.1.0-cp311-cp311-manylinux_2_28_x86_64.whl",
	"./wheels/pillow-11.1.0-cp311-cp311-win_amd64.whl",
	"./wheels/scikit_image-0.25.0-cp311-cp311-macosx_12_0_arm64.whl",
	"./wheels/scikit_image-0.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
	"./wheels/scikit_image-0.25.0-cp311-cp311-win_amd64.whl",
	"./wheels/scipy-1.15.1-cp311-cp311-macosx_12_0_arm64.whl",
	"./wheels/scipy-1.15.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
	"./wheels/scipy-1.15.1-cp311-cp311-win_amd64.whl",
	"./wheels/tifffile-2025.1.10-py3-none-any.whl",]

#[build]
# Some optional extra options were added to this table

# Folder containing the source code of the extension. Defaults to the current directory
#source = 'src'
# Folder for where the extension will be stored
# with all the files (to build the extension). Defaults to ./build
#build = 'build'
# Output folder for the built addon in the .zip file.
#dist = 'dist'

# This contains a list of files or folders to keep in the built extension.
#paths = [
#  'LICENSE',
#  'README.md',
#]
